@use "variables" as *;
@use "sass:map";

// === ANIMATION SYSTEM ===

// Animation durations
$animation-duration: (
  fast: 0.15s,
  normal: 0.2s,
  slow: 0.3s,
  slower: 0.4s
);

// Easing functions
$easing: (
  linear: cubic-bezier(0.25, 0.25, 0.75, 0.75),
  ease-out: cubic-bezier(0.25, 0.46, 0.45, 0.94),
  ease-in: cubic-bezier(0.55, 0.055, 0.675, 0.19),
  ease-in-out: cubic-bezier(0.645, 0.045, 0.355, 1),
  bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55)
);

// Helper functions
@function duration($key) {
  @return map.get($animation-duration, $key);
}

@function easing($key) {
  @return map.get($easing, $key);
}

// Base animation classes
.animate-fade-in {
  opacity: 0;
  animation: fadeIn duration(normal) easing(ease-out) forwards;
}

.animate-slide-up {
  transform: translateY(20px);
  opacity: 0;
  animation: slideUp duration(normal) easing(ease-out) forwards;
}

.animate-slide-down {
  transform: translateY(-20px);
  opacity: 0;
  animation: slideDown duration(normal) easing(ease-out) forwards;
}

.animate-scale-in {
  transform: scale(0.9);
  opacity: 0;
  animation: scaleIn duration(normal) easing(bounce) forwards;
}

// Hover animations
.hover-lift {
  transition: transform duration(fast) easing(ease-out);
  
  &:hover {
    transform: translateY(-2px);
  }
}

.hover-scale {
  transition: transform duration(fast) easing(ease-out);
  
  &:hover {
    transform: scale(1.02);
  }
}

.hover-glow {
  transition: box-shadow duration(normal) easing(ease-out);
  
  &:hover {
    box-shadow: 0 8px 25px rgba(color(primary), 0.15);
  }
}

// Loading animations
.pulse {
  animation: pulse 1.5s ease-in-out infinite;
}

.skeleton {
  background: linear-gradient(
    90deg,
    #f0f0f0 25%,
    #e0e0e0 50%,
    #f0f0f0 75%
  );
  background-size: 200% 100%;
  animation: loading 1.5s infinite;
}

body.dark .skeleton {
  background: linear-gradient(
    90deg,
    #2a2a2a 25%,
    #3a3a3a 50%,
    #2a2a2a 75%
  );
  background-size: 200% 100%;
}

// Page transition animations
.page-enter {
  opacity: 0;
  transform: translateX(20px);
}

.page-enter-active {
  opacity: 1;
  transform: translateX(0);
  transition: opacity duration(normal) easing(ease-out),
              transform duration(normal) easing(ease-out);
}

.page-exit {
  opacity: 1;
  transform: translateX(0);
}

.page-exit-active {
  opacity: 0;
  transform: translateX(-20px);
  transition: opacity duration(fast) easing(ease-in),
              transform duration(fast) easing(ease-in);
}

// Staggered animation utility
.stagger-children > * {
  opacity: 0;
  transform: translateY(20px);
  animation: slideUp duration(normal) easing(ease-out) forwards;
  
  @for $i from 1 through 10 {
    &:nth-child(#{$i}) {
      animation-delay: #{$i * 0.05}s;
    }
  }
}

// === KEYFRAMES ===
@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideDown {
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes scaleIn {
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes loading {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

// Focus animations for accessibility
.focus-ring {
  transition: all duration(fast) easing(ease-out);
  
  &:focus-visible {
    outline: 2px solid color(primary);
    outline-offset: 2px;
    box-shadow: 0 0 0 4px rgba(color(primary), 0.1);
  }
}

// Reduced motion preferences
@media (prefers-reduced-motion: reduce) {
  *, *::before, *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
  
  .animate-fade-in,
  .animate-slide-up,
  .animate-slide-down,
  .animate-scale-in {
    animation: none;
    opacity: 1;
    transform: none;
  }
}